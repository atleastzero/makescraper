{"name":"Make School","majors":[{"name":"B.S. in Applied Computer Science","degree requirements":"9 Science \u0026 Letters Courses (S\u0026L)9 Software Product Development Courses (SPD)6 Intensives (INT)5 Foundation Courses1 Supervised Work Experience (SWE) Course6 Concentration Courses (Note: Data Science has 5)4+ Technical Electives1 Foreign Language"}],"courses":[{"department":"ACE","number":"","name":"ARTISTIC \u0026 CREATIVE EXPRESSION","prerequisites":"None","type":"Science And Letters","description":"Courses in ACE are designed to advance the following skills: \n- Develop competencies in creative thinking, artistic skills, and in the recognition of the diversity of artistic expressions;\n- Apply creative thinking and artistic practice to unique self or collective expressions;\n- Design, create, and present or practice and perform works of art for an audience;\n- Reflect or articulate on the creative process, product, performance, artistic skill, aesthetics, or creative practice."},{"department":"BEW","number":"1.1","name":"RESTful \u0026 Resourceful MVC Architecture","prerequisites":"None","type":"Science And Letters","description":"Courses in ACE are designed to advance the following skills: \n- Develop competencies in creative thinking, artistic skills, and in the recognition of the diversity of artistic expressions;\n- Apply creative thinking and artistic practice to unique self or collective expressions;\n- Design, create, and present or practice and perform works of art for an audience;\n- Reflect or articulate on the creative process, product, performance, artistic skill, aesthetics, or creative practice."},{"department":"BEW","number":"1.2","name":"Authentication, Authorization, and Advanced Queries","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"BEW","number":"1.3","name":"Server-Side Architecture and Frameworks","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"BEW","number":"2.1","name":"Advanced Backend Web Patterns","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"BEW","number":"2.2","name":"DevOps, Deployment \u0026 Containers","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"BEW","number":"2.3","name":"Introduction to Web Security","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"BEW","number":"2.4","name":"Decentralized Apps \u0026 Distributed Protocols","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"BEW","number":"2.5","name":"Patterns \u0026 Practices in Strongly Typed Ecosystems (Go)","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"BEW","number":"2.9","name":"Back End Web Technical Seminar","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"CKE","number":"","name":"CIVIC KNOWLEDGE \u0026 ENGAGEMENT","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"CS","number":"1.0","name":"Introduction to Programming","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"CS","number":"1.1","name":"Object Oriented Programming","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"CS","number":"1.2","name":"Intro to Data Structures","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"CS","number":"1.3","name":"Core Data Structures \u0026 Algorithms","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"CS","number":"2.1","name":"Advanced Trees \u0026 Sorting Algorithms","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"CS","number":"2.2","name":"Advanced Recursion \u0026 Graphs","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"DS","number":"1.1","name":"Data Analysis \u0026 Visualization","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"DS","number":"2.1","name":"Machine Learning","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"DS","number":"2.2","name":"Deep Learning","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"DS","number":"2.3","name":"Data Science in Production","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"DS","number":"2.4","name":"Advanced Topics in Data Science","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"DS","number":"2.9","name":"Data Science Technical Seminar","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"EC","number":"2000","name":"EFF COMM 2: Effective Communication 2","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"EC1","number":"","name":"EFFECTIVE COMMUNICATIONS 1","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"EC1","number":"1000","name":"EFF COMM 1: Effective Communication 1","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"EC2","number":"","name":"EFFECTIVE COMMUNICATIONS 2","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"EL","number":"","name":"EXAMINED LIFE","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"ENGL","number":"1004","name":"EFF COMM 1 (Part 1): Expository Writing","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"ENGL","number":"2305","name":"CREATIVE: Introduction to Creative Writing","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"ENGL","number":"3051","name":"CIVIC: Latin American Literature","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"ENT","number":"1.1","name":"Contracting","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"ENT","number":"2.1","name":"Entrepreneurship","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"FEW","number":"1.1","name":"Web Foundations","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"FEW","number":"1.2","name":"JavaScript Foundations","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"FEW","number":"1.3","name":"Responsive Web Design","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"FEW","number":"2.1","name":"Writing JavaScript Libraries","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"FEW","number":"2.2","name":"Web Design \u0026 Advanced CSS","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"FEW","number":"2.3","name":"Single Page Web Applications","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"FEW","number":"2.4","name":"Native Development with JavaScript","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"FEW","number":"2.5","name":"Data Visualization and Web Graphics","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"FEW","number":"2.9","name":"Front End Web Technical Seminar","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"INT","number":"1.1","name":"Fall Intensive 1","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"INT","number":"1.2","name":"Winter Intensive 1","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"INT","number":"1.3","name":"Spring Intensive 1","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"INT","number":"2.1","name":"Fall Intensive 2","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"INT","number":"2.2","name":"Winter Intensive 2","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"INT","number":"2.3","name":"Spring Intensive 2","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"MOB","number":"1.1","name":"Introduction to Swift","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"MOB","number":"1.2","name":"Introduction to iOS Development in Swift","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"MOB","number":"1.3","name":"Dynamic iOS Applications","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"MOB","number":"2.1","name":"Local Persistence in iOS","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"MOB","number":"2.2","name":"2D Mobile Game Development","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"MOB","number":"2.3","name":"iOS Concurrency \u0026 Parallelism","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"MOB","number":"2.4","name":"Advanced Architectural Patterns in iOS","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"MOB","number":"2.9","name":"Mobile Technical Seminar","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"PHIL","number":"3102","name":"EXAMINED: Global Business Ethics \u0026 Law","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"PHIL","number":"3123","name":"EXAMINED: Ethical Being, Being Ethical","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"PHIL","number":"3125","name":"PURPOSE: Being Human, Human Being","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"PHSC","number":"2300","name":"SCIENCE: Physical Geology Lecture \u0026 Lab","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"PHSC","number":"3210","name":"SCIENCE: Bay Area Rocks Lecture \u0026 Lab","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"PHYS","number":"1000","name":"SCIENCE: Conceptual Physics \u0026 Lab","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"PM","number":"","name":"PURPOSE \u0026 MEANING","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"PSY","number":"1100","name":"SOCIAL: Introduction to Psychology","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"QL","number":"","name":"QUANTITATIVE LITERACY AND SOCIAL ISSUES","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"QL","number":"1.1","name":"QUANT: Mathematical Thinking \u0026 Quantitative Reasoning","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"RLGN","number":"3178","name":"PURPOSE: The World's Religions","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"RLGN","number":"3179","name":"PURPOSE: Myth, Symbol \u0026 Ritual","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SCI","number":"","name":"SCIENCE","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SEM","number":"2.2","name":"Technical Interviewing","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"1.01","name":"Engineering Careers 1","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"1.02","name":"Engineering Careers 2","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"1.1","name":"Introduction to Product Development","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"1.2","name":"Agile Development \u0026 UX/UI","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"1.3","name":"Team Software Project","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"1.4","name":"Testing \u0026 Architecture","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"1.41","name":"Engineering Careers: Communication \u0026 Interviewing","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"1.5","name":"Engineering Careers: Management \u0026 Leadership","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"2.1","name":"Industry Collaboration Project Part 1","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"2.2","name":"Industry Collaboration Project Part 2","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"2.3","name":"Onboarding","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"2.31","name":"Testing and Architecture","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"2.4","name":"Job Search \u0026 Interview Practice","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SPD","number":"2.41","name":"Job Search \u0026 Interview Practice","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SSHB","number":"","name":"SOCIAL SCIENCE","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SUP","number":"2.1","name":"Supervised Intensive Study","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SUP","number":"2.2","name":"Supervised Intensive Project","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"SWE","number":"2.1","name":"Supervised Work Experience","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"WEB","number":"1.0","name":"Web Foundations","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"},{"department":"WEB","number":"1.1","name":"Web Architecture","prerequisites":"None","type":"Required","description":"This course covers full stack web design. Students begin by learning basic HTML, CSS and JavaScript to make simple websites. Then they explore the three major patterns and architectures that make the web work: REST, resources, and Model-View-Controller. Students will use Python or JavaScript frameworks to illustrate these patterns, but the patterns themselves are language-independent and are repeated across many common webserver frameworks. Other key concepts covered include the request-response cycle, server-side templating, controller testing, associating and nesting resources, state, and convention over configuration.\n\nPrerequisites: College Prework Modules"}]}